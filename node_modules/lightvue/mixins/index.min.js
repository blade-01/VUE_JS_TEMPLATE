this.lightvue=this.lightvue||{},this.lightvue.mixins=function(t,e){"use strict";var i={props:["value"],emits:["input","update:modelValue"],computed:{modelValue(){return this.$attrs.modelValue?this.$attrs.modelValue:this.value}},methods:{updateValue(t){this.$emit("input",t),this.$emit("update:modelValue",t)}}},l={props:["value"],emits:["input","update:modelValue"],computed:{modelValue(){return this.value?this.value:this.$attrs.modelValue?this.$attrs.modelValue:null}},methods:{updateValue(t){this.$emit("input",t),this.$emit("update:modelValue",t)}}},s={props:{options:Array,optionLabel:null,optionValue:null,optionDisabled:null,dataKey:null},methods:{getOptionLabel(t){return this.optionLabel?e.ObjectUtils.resolveFieldData(t,this.optionLabel):t},getOptionValue(t){return this.optionValue?e.ObjectUtils.resolveFieldData(t,this.optionValue):t},getOptionRenderKey(t){return this.dataKey?e.ObjectUtils.resolveFieldData(t,this.dataKey):this.getOptionLabel(t)},isOptionDisabled(t){return!!this.optionDisabled&&e.ObjectUtils.resolveFieldData(t,this.optionDisabled)},isOptionSelected(t){return this.modelValue instanceof Array?e.ObjectUtils.contains(this.getOptionValue(t),this.modelValue):e.ObjectUtils.equals(this.modelValue,this.getOptionValue(t),this.equalityKey)}},computed:{equalityKey(){return this.optionValue?null:this.dataKey}}},a={data:()=>({popstateEvent:null}),methods:{preventPopstate(){window.history.pushState({id:2},null,null),window.addEventListener("popstate",this.handleOnPopstate),this.popstateEvent=!0},handleOnPopstate(){window.removeEventListener("popstate",null),this.popstateEvent=null,this.handleOnBrowserBack&&this.handleOnBrowserBack()},manuallyClosePopstate(){this.popstateEvent&&(this.$router&&this.$router.go(-1),window.removeEventListener("popstate",null),this.popstateEvent=null)}}};return t.localValueMixin=l,t.optionsMixin=s,t.preventBrowserBackMixin=a,t.trueValueMixin=i,Object.defineProperty(t,"__esModule",{value:!0}),t}({},lightvue.utils);
