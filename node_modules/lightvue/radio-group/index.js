"use strict";var e=require("lightvue/checkbox"),t=require("lightvue/mixins"),o=require("vue");function i(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var n=i(e),r={name:"LvCheckboxGroup",mixins:[t.localValueMixin,t.optionsMixin],props:{},components:{LvCheckBox:n.default},methods:{refresh(e,t){let o=this.getOptionValue(t);this.updateValue(o)}}};const a={class:"lv-radio-group_wrap"};!function(e,t){void 0===t&&(t={});var o=t.insertAt;if(e&&"undefined"!=typeof document){var i=document.head||document.getElementsByTagName("head")[0],n=document.createElement("style");n.type="text/css","top"===o&&i.firstChild?i.insertBefore(n,i.firstChild):i.appendChild(n),n.styleSheet?n.styleSheet.cssText=e:n.appendChild(document.createTextNode(e))}}(".lv-radio-group_wrap .lv-checkbox {\n  margin: 4px 1em 4px 2px; }\n"),r.render=function(e,t,i,n,r,l){const c=o.resolveComponent("lv-check-box");return o.openBlock(),o.createBlock("div",a,[(o.openBlock(!0),o.createBlock(o.Fragment,null,o.renderList(e.options,((t,i)=>(o.openBlock(),o.createBlock(c,o.mergeProps({type:"radio",onChange:e=>l.refresh(e,t)},e.$attrs,{"aria-label":e.getOptionLabel(t),key:e.getOptionRenderKey(t),role:"option","aria-selected":e.isOptionSelected(t),checked:e.isOptionSelected(t),disabled:e.isOptionDisabled(t),value:e.getOptionValue(t)}),{default:o.withCtx((()=>[o.renderSlot(e.$slots,"option",{option:t,index:i},(()=>[o.createTextVNode(o.toDisplayString(e.getOptionLabel(t)),1)]))])),_:2},1040,["onChange","aria-label","aria-selected","checked","disabled","value"])))),128))])},module.exports=r;
