import t from"lightvue/input";import e from"lightvue/button";import{resolveComponent as l,openBlock as o,createBlock as u,mergeProps as a,withCtx as n,createCommentVNode as i}from"vue";var s={name:"LvNumber",components:{LvInput:t,LvButton:e},data:()=>({localValue:""}),props:{value:{type:Number,default:0},controls:{type:Boolean,default:!0},iconRight:{type:String,default:"light-icon-plus"},iconLeft:{type:String,default:"light-icon-minus"},buttonColor:{type:String,default:"lv--secondary"},max:{type:Number},step:{type:Number,default:1},min:{type:Number,default:0}},methods:{updateValue(t){""===t&&(t=this.min);let e=parseFloat(t);e>=this.min&&(!this.max||e<=this.max)&&(this.localValue=e,this.$emit("input",e),this.$emit("update:modelValue",e))},LocalIncrement(t){this.updateValue(+this.modelValue+ +this.step)},LocalDecrement(t){this.updateValue(this.modelValue-this.step)}},computed:{modelValue(){return this.$attrs.modelValue?this.$attrs.modelValue:this.value?this.value:this.localValue}}};s.render=function(t,e,s,r,p,m){const c=l("LvButton"),d=l("lv-input");return o(),u(d,a({type:"number",editable:!0,ref:"mainInput",onInput:m.updateValue,value:m.modelValue},t.$attrs),{prepend:n((()=>[s.controls?(o(),u(c,{key:0,icon:s.iconLeft,class:s.buttonColor,onClick:e[1]||(e[1]=t=>m.LocalDecrement(t))},null,8,["icon","class"])):i("",!0)])),append:n((()=>[s.controls?(o(),u(c,{key:0,icon:s.iconRight,class:s.buttonColor,onClick:e[2]||(e[2]=t=>m.LocalIncrement(t))},null,8,["icon","class"])):i("",!0)])),_:1},16,["onInput","value"])};export default s;
