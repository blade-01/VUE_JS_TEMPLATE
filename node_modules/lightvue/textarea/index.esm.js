import e from"lightvue/input";import{resolveComponent as t,openBlock as a,createBlock as l,createVNode as i,mergeProps as n,withCtx as s,toDisplayString as r,createCommentVNode as u}from"vue";var o={name:"LvTextarea",components:{LvInput:e},data:()=>({localValue:""}),props:{value:{type:String,default:""},maxLength:{type:Number},showLimit:{type:Boolean,default:!1},autoResize:{type:Boolean,default:!1},resize:{type:String,default:"none"}},mounted(){this.$refs.textarea.offsetParent&&this.autoResize&&this.resizeTextareaV2()},methods:{resizeTextareaV2(){this.$refs.textarea.style.height="auto",this.$refs.textarea.style.height=this.$refs.textarea.scrollHeight+(this.$refs.textarea.clientHeight-this.$refs.textarea.offsetHeight)+"px"},updateModel(e){this.$emit("input-native",e),this.updateValue(e.target.value)},updateValue(e){this.autoResize&&this.resizeTextareaV2(),this.localValue=e,this.$emit("input",e),this.$emit("update:modelValue",e)},handleClear(){this.updateValue(""),this.$emit("clear")}},computed:{listeners(){return{...this.$listeners,input:e=>{this.updateModel(e)}}},filled(){return null!=this.modelValue&&this.modelValue.toString().length>0},modelValue(){return this.$attrs.modelValue?this.$attrs.modelValue:this.value?this.value:this.localValue}}};const d={key:0,class:"lv-textarea__limits"};!function(e,t){void 0===t&&(t={});var a=t.insertAt;if(e&&"undefined"!=typeof document){var l=document.head||document.getElementsByTagName("head")[0],i=document.createElement("style");i.type="text/css","top"===a&&l.firstChild?l.insertBefore(i,l.firstChild):l.appendChild(i),i.styleSheet?i.styleSheet.cssText=e:i.appendChild(document.createTextNode(e))}}(".lv-textarea {\n  border: none;\n  width: 100%;\n  background: transparent;\n  outline: none;\n  resize: none;\n  font-family: inherit; }\n  .lv-textarea.--resize-vertical {\n    resize: vertical; }\n\n.lv-textarea__limits {\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 5px; }\n"),o.render=function(e,o,h,m,p,f){const c=t("lv-input");return a(),l("div",null,[i(c,n({type:"text",editable:!1,ref:"mainInput"},e.$attrs,{class:{"--not-empty":f.filled},value:f.modelValue,onClear:o[2]||(o[2]=e=>f.handleClear())}),{default:s((()=>[i("textarea",n({maxlength:h.maxLength,class:"lv-textarea light-scrollbar"},e.$attrs,{onInput:o[1]||(o[1]=(...e)=>f.updateModel&&f.updateModel(...e)),value:f.modelValue,ref:"textarea",class:{"--resize-vertical":"vertical"===h.resize}}),null,16,["maxlength","value"])])),_:1},16,["class","value"]),h.showLimit&&h.maxLength?(a(),l("div",d,r(f.modelValue?f.modelValue.length:0)+" / "+r(h.maxLength),1)):u("",!0)])};export default o;
